// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PersonalBlog.Data.Concrete.EntityFramework.Contexts;

namespace PersonalBlog.Data.Migrations
{
    [DbContext(typeof(BlogContext))]
    partial class BlogContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.3")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("PersonalBlog.Entities.Concrete.AboutMe", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("BirthDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedByName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ImagePath")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<string>("ModifiedByName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("ModifiedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("MyCVPath")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("MyJob")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<string>("MyJobFA")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.HasKey("Id");

                    b.ToTable("AboutMe");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BirthDate = new DateTime(1994, 6, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedByName = "InitialCreated",
                            CreatedTime = new DateTime(2021, 3, 23, 20, 25, 27, 49, DateTimeKind.Local).AddTicks(9857),
                            FirstName = "Atahan",
                            ImagePath = "",
                            IsActive = false,
                            IsDeleted = false,
                            LastName = "Öztürk",
                            ModifiedByName = "InitialCreated",
                            ModifiedTime = new DateTime(2021, 3, 23, 20, 25, 27, 49, DateTimeKind.Local).AddTicks(9861),
                            MyCVPath = "",
                            MyJob = "Web Developer",
                            MyJobFA = "<i class=\"fas fa - laptop - code\"></i>"
                        });
                });

            modelBuilder.Entity("PersonalBlog.Entities.Concrete.Admin", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreatedByName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedByName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("ModifiedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("SQAnswer")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("SecurityQuestion")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("Id");

                    b.ToTable("Admin");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedByName = "InitialCreated",
                            CreatedTime = new DateTime(2021, 3, 23, 20, 25, 27, 65, DateTimeKind.Local).AddTicks(3855),
                            Email = "ozturkatahan5@gmail.com",
                            IsActive = false,
                            IsDeleted = false,
                            ModifiedByName = "InitialCreated",
                            ModifiedTime = new DateTime(2021, 3, 23, 20, 25, 27, 65, DateTimeKind.Local).AddTicks(3857),
                            Password = " 202cb962ac59075b964b07152d234b70",
                            SQAnswer = "94f80647bdc6e286c8af93d0852b62ce",
                            SecurityQuestion = "Ilk Evcil Hayvan"
                        });
                });

            modelBuilder.Entity("PersonalBlog.Entities.Concrete.Articles", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("NVARCHAR(MAX)");

                    b.Property<string>("CreatedByName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedByName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("ModifiedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("SeoDescription")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("SeoTags")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("ShortContent")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Thumbnail")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("ViewsCount")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("Articles");
                });

            modelBuilder.Entity("PersonalBlog.Entities.Concrete.Categories", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CategoryFA")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("CreatedByName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedByName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("ModifiedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("PersonalBlog.Entities.Concrete.Comments", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ArticleId")
                        .HasColumnType("int");

                    b.Property<string>("CreatedByName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ModifiedByName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("ModifiedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Text")
                        .IsRequired()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)");

                    b.HasKey("Id");

                    b.HasIndex("ArticleId");

                    b.ToTable("Comments");
                });

            modelBuilder.Entity("PersonalBlog.Entities.Concrete.ContactInfo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Adress")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("CreatedByName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedByName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("ModifiedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("ShortAdress")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("ContactInfo");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Adress = "Atakule Çankaya - ANKARA",
                            CreatedByName = "InitialCreated",
                            CreatedTime = new DateTime(2021, 3, 23, 20, 25, 26, 964, DateTimeKind.Local).AddTicks(6625),
                            Email = "ozturkatahan5@gmail.com",
                            IsActive = false,
                            IsDeleted = false,
                            ModifiedByName = "InitialCreated",
                            ModifiedTime = new DateTime(2021, 3, 23, 20, 25, 26, 964, DateTimeKind.Local).AddTicks(6629),
                            PhoneNumber = "+90 539 301 87 50",
                            ShortAdress = "Çankaya - ANKARA"
                        });
                });

            modelBuilder.Entity("PersonalBlog.Entities.Concrete.Education", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreatedByName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Duration")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedByName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("ModifiedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("SchoolName")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Educations");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedByName = "InitialCreated",
                            CreatedTime = new DateTime(2021, 3, 23, 20, 25, 26, 956, DateTimeKind.Local).AddTicks(7200),
                            Description = "Tez aşamasında.",
                            Duration = "Şubat 2019 - Devam Ediyor",
                            IsActive = false,
                            IsDeleted = false,
                            ModifiedByName = "InitialCreated",
                            ModifiedTime = new DateTime(2021, 3, 23, 20, 25, 26, 956, DateTimeKind.Local).AddTicks(7204),
                            SchoolName = "Ankara Yıldırım Beyazıt Üniversitesi - Bilgisayar Mühendisliği",
                            Title = "Yüksek Lisans Derecesi (Tezli)"
                        },
                        new
                        {
                            Id = 2,
                            CreatedByName = "InitialCreated",
                            CreatedTime = new DateTime(2021, 3, 23, 20, 25, 26, 957, DateTimeKind.Local).AddTicks(3483),
                            Description = "aaa",
                            Duration = "Eylül 2013 - Haziran 2018",
                            IsActive = false,
                            IsDeleted = false,
                            ModifiedByName = "InitialCreated",
                            ModifiedTime = new DateTime(2021, 3, 23, 20, 25, 26, 957, DateTimeKind.Local).AddTicks(3486),
                            SchoolName = "Ankara Yıldırım Beyazıt Üniversitesi - Bilgisayar Mühendisliği",
                            Title = "Lisans Derecesi"
                        });
                });

            modelBuilder.Entity("PersonalBlog.Entities.Concrete.Experiences", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreatedByName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<string>("Duration")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedByName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("ModifiedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("WorkPlace")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.HasKey("Id");

                    b.ToTable("Experiences");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedByName = "InitialCreated",
                            CreatedTime = new DateTime(2021, 3, 23, 20, 25, 26, 947, DateTimeKind.Local).AddTicks(9985),
                            Description = "İşkur destekli, eğitim sonunda sertifika aldığım web geliştiricisi kursu.",
                            Duration = "Ağustos 2020 - Ocak 2021",
                            IsActive = false,
                            IsDeleted = false,
                            ModifiedByName = "InitialCreated",
                            ModifiedTime = new DateTime(2021, 3, 23, 20, 25, 26, 947, DateTimeKind.Local).AddTicks(9988),
                            Title = "ASP.NET and ASP.NET Core Web Geliştiricisi Kursiyeri (İşkur Destekli)",
                            WorkPlace = "Bilge Adam Akademi"
                        });
                });

            modelBuilder.Entity("PersonalBlog.Entities.Concrete.HomePageSliders", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("NVARCHAR(MAX)");

                    b.Property<string>("CreatedByName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedByName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("ModifiedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("ShortContent")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("HomePageSliders");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Content = "",
                            CreatedByName = "InitialCreated",
                            CreatedTime = new DateTime(2021, 3, 23, 20, 25, 26, 938, DateTimeKind.Local).AddTicks(8370),
                            IsActive = false,
                            IsDeleted = false,
                            ModifiedByName = "InitialCreated",
                            ModifiedTime = new DateTime(2021, 3, 23, 20, 25, 26, 938, DateTimeKind.Local).AddTicks(8373),
                            ShortContent = "Web geliştirici ...",
                            Title = "Web Geliştirici"
                        });
                });

            modelBuilder.Entity("PersonalBlog.Entities.Concrete.Interests", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreatedByName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedByName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("ModifiedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Text")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.HasKey("Id");

                    b.ToTable("Interests");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedByName = "InitialCreated",
                            CreatedTime = new DateTime(2021, 3, 23, 20, 25, 26, 896, DateTimeKind.Local).AddTicks(4037),
                            IsActive = false,
                            IsDeleted = false,
                            ModifiedByName = "InitialCreated",
                            ModifiedTime = new DateTime(2021, 3, 23, 20, 25, 26, 896, DateTimeKind.Local).AddTicks(4055),
                            Text = "Web Uygulama Geliştirme, Mobil Uygulama Geliştirme, Mobil Oyun Geliştirme"
                        },
                        new
                        {
                            Id = 2,
                            CreatedByName = "InitialCreated",
                            CreatedTime = new DateTime(2021, 3, 23, 20, 25, 26, 896, DateTimeKind.Local).AddTicks(6651),
                            IsActive = false,
                            IsDeleted = false,
                            ModifiedByName = "InitialCreated",
                            ModifiedTime = new DateTime(2021, 3, 23, 20, 25, 26, 896, DateTimeKind.Local).AddTicks(6654),
                            Text = "Bilimsel Makaleler, Yapay Zeka, Blockchain"
                        });
                });

            modelBuilder.Entity("PersonalBlog.Entities.Concrete.Messages", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreatedByName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<string>("ModifiedByName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("ModifiedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Subject")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Text")
                        .IsRequired()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)");

                    b.HasKey("Id");

                    b.ToTable("Messages");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedByName = "InitialCreated",
                            CreatedTime = new DateTime(2021, 3, 23, 20, 25, 26, 929, DateTimeKind.Local).AddTicks(8946),
                            Email = "deneme@gmail.com",
                            FirstName = "Atahan",
                            IsActive = false,
                            IsDeleted = false,
                            LastName = "Öztürk",
                            ModifiedByName = "InitialCreated",
                            ModifiedTime = new DateTime(2021, 3, 23, 20, 25, 26, 929, DateTimeKind.Local).AddTicks(8950),
                            Subject = "Deneme",
                            Text = "Deneme Yazısı"
                        });
                });

            modelBuilder.Entity("PersonalBlog.Entities.Concrete.SiteIdentity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreatedByName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Keywords")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("LogoFA")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("LogoText")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("ModifiedByName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("ModifiedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("SiteIdentity");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedByName = "InitialCreated",
                            CreatedTime = new DateTime(2021, 3, 23, 20, 25, 26, 921, DateTimeKind.Local).AddTicks(7303),
                            Description = "Atahan Öztürk Web Developer",
                            IsActive = false,
                            IsDeleted = false,
                            Keywords = "C#, .NET, .NET Core, Web, Software",
                            LogoFA = "<i class=\"fab fa - connectdevelop\"></i>",
                            LogoText = "Atahan Öztürk",
                            ModifiedByName = "InitialCreated",
                            ModifiedTime = new DateTime(2021, 3, 23, 20, 25, 26, 921, DateTimeKind.Local).AddTicks(7311),
                            Title = "Atahan Öztürk"
                        });
                });

            modelBuilder.Entity("PersonalBlog.Entities.Concrete.Skills", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreatedByName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedByName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("ModifiedTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("PercentageValue")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.HasKey("Id");

                    b.ToTable("Skills");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedByName = "InitialCreated",
                            CreatedTime = new DateTime(2021, 3, 23, 20, 25, 26, 910, DateTimeKind.Local).AddTicks(9544),
                            IsActive = false,
                            IsDeleted = false,
                            ModifiedByName = "InitialCreated",
                            ModifiedTime = new DateTime(2021, 3, 23, 20, 25, 26, 910, DateTimeKind.Local).AddTicks(9547),
                            PercentageValue = 75,
                            Title = "C#"
                        });
                });

            modelBuilder.Entity("PersonalBlog.Entities.Concrete.SocialMediaAccounts", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Account")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("AccountFA")
                        .IsRequired()
                        .HasMaxLength(120)
                        .HasColumnType("nvarchar(120)");

                    b.Property<string>("AccountURL")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("CreatedByName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedByName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("ModifiedTime")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("SocialMediaAccounts");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Account = "Linkedin",
                            AccountFA = "<i class=\"fab fa - linkedin\"></i>",
                            AccountURL = "https://www.linkedin.com/in/atahan-öztürk-43599b131/",
                            CreatedByName = "InitialCreated",
                            CreatedTime = new DateTime(2021, 3, 23, 20, 25, 26, 903, DateTimeKind.Local).AddTicks(4047),
                            IsActive = false,
                            IsDeleted = false,
                            ModifiedByName = "InitialCreated",
                            ModifiedTime = new DateTime(2021, 3, 23, 20, 25, 26, 903, DateTimeKind.Local).AddTicks(4051)
                        });
                });

            modelBuilder.Entity("PersonalBlog.Entities.Concrete.Summary", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("NVARCHAR(MAX)");

                    b.Property<string>("CreatedByName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedByName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("ModifiedTime")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Summary");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Content = "Ankara Yıldırım Beyazıt Üniversitesi'nden Haziran 2018'de mezun oldum. Lisansım esnasında bir tanesi ASP.NET ile web uygulaması geliştirme diğeri ise Xamarin ile mobil uygulama geliştirme üzerine olmak üzere 2 staj yaptım. Mezun olduktan sonra BiSoft Bilgi Teknolojilerinde 2 haftalık Web temelli Java eğitimi aldım. Arkasından Unity 3D ile mobil tabanlı bir oyun geliştirdim ve Google Play Store’da yayınladım. Şubat 2019'da ise Ankara Yıldırım Beyazıt Üniversitesi'nde yüksek lisansa başladım. Ağustos 2019'da İşkur Nitelikli Bilişim Uzmanı Yetiştirme Programı kapsamında Bilge Adam Akademi'de ASP.NET Web Programlama kursuna katıldım (Ağustos 2019 - Ocak 2020). Kurs bittiğinden bu yana; ASP.NET, ASP.NET Core, Javascript, Angular, NodeJS gibi teknolojileri takiben web uygulaması geliştirmeye devam ediyorum.",
                            CreatedByName = "InitialCreated",
                            CreatedTime = new DateTime(2021, 3, 23, 20, 25, 26, 885, DateTimeKind.Local).AddTicks(499),
                            IsActive = false,
                            IsDeleted = false,
                            ModifiedByName = "InitialCreated",
                            ModifiedTime = new DateTime(2021, 3, 23, 20, 25, 26, 885, DateTimeKind.Local).AddTicks(1847)
                        });
                });

            modelBuilder.Entity("PersonalBlog.Entities.Concrete.Articles", b =>
                {
                    b.HasOne("PersonalBlog.Entities.Concrete.Categories", "Categories")
                        .WithMany("Articles")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Categories");
                });

            modelBuilder.Entity("PersonalBlog.Entities.Concrete.Comments", b =>
                {
                    b.HasOne("PersonalBlog.Entities.Concrete.Articles", "Articles")
                        .WithMany("Comments")
                        .HasForeignKey("ArticleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Articles");
                });

            modelBuilder.Entity("PersonalBlog.Entities.Concrete.Articles", b =>
                {
                    b.Navigation("Comments");
                });

            modelBuilder.Entity("PersonalBlog.Entities.Concrete.Categories", b =>
                {
                    b.Navigation("Articles");
                });
#pragma warning restore 612, 618
        }
    }
}
